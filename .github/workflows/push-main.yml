name: Publish from main

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.118.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install NPM dependencies
        run: pnpm i
      - name: Tailwind build
        run: pnpm build
      - name: Build static site with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./public

   # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      TARGET_SERVER: ${{ secrets.TARGET_SERVER }}
      DEPLOY_SECRET: ${{ secrets.DEPLOY_SECRET }}
    steps:
      - name: Generate handshake and cURL deployment endpoint
        run: |
          export HANDSHAKE=$(echo -n "$DEPLOY_SECRET$GITHUB_SHA" | openssl sha1 | awk '{print $2}')
          curl -X PUT $TARGET_SERVER -H "Content-Type: application/json" -d "{ \"handshake\": \"$HANDSHAKE\", \"headsha\": \"$GITHUB_SHA\" }"


